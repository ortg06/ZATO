create table BITACORA
(
   PK_BITACORA          	INTEGER      	        not null,
   USUARIO       		VARCHAR2(50)    	not null,
   FECHA_MODIFICACION		DATE 			NOT NULL,
   TABLA			VARCHAR2(50)    	not null,
   OPERACION 			VARCHAR2(50)    	not null,
   VALOR_ANTERIOR		VARCHAR2(50),
   VALOR_NUEVO			VARCHAR2(50),
   PK_ALTERADO			INTEGER not null,
   constraint PK_BITACORA primary key (PK_BITACORA)
)
create sequence SEQUENCE_BITACORA
increment by 1
start with 1

create or replace TRIGGER BITACORA_CATALOGO_APTITUD
AFTER INSERT OR UPDATE OR DELETE on CATALOGO_APTITUD 
FOR EACH ROW
DECLARE
    log_action  bitacora.operacion%TYPE;
    V_USER VARCHAR2(50);
    V_FECHA DATE;
    ID INTEGER;
    ID_MO INTEGER;
 begin
 SELECT USER INTO V_USER FROM DUAL;
 SELECT SYSDATE INTO V_FECHA FROM DUAL;
 ID := SEQUENCE_BITACORA.nextval;
IF INSERTING THEN
    log_action := 'Insert';
    ID_MO:=:NEW.PK_CATALOGO_APTITUD;
  ELSIF UPDATING THEN
    log_action := 'Update';
    ID_MO:=:OLD.PK_CATALOGO_APTITUD;
  ELSIF DELETING THEN
    log_action := 'Delete';
    ID_MO:=:OLD.PK_CATALOGO_APTITUD;
  END IF;
 INSERT INTO BITACORA(PK_BITACORA,USUARIO, fecha_modificacion,tabla,OPERACION,valor_anterior,valor_nuevo,pk_alterado) 
 VALUES (ID,V_USER,V_FECHA, 'CATALOGO APTITUD', log_action,:OLD.NOMBRE_APTITUD,:NEW.NOMBRE_APTITUD,ID_MO);
 end;

create or replace TRIGGER BITACORA_CATALOGO_CATEGORIA
AFTER INSERT OR UPDATE OR DELETE on CATALOGO_CATEGORIA
FOR EACH ROW
DECLARE
    log_action  bitacora.operacion%TYPE;
    V_USER VARCHAR2(50);
    V_FECHA DATE;
    ID INTEGER;
    ID_MO INTEGER;
 begin
 SELECT USER INTO V_USER FROM DUAL;
 SELECT SYSDATE INTO V_FECHA FROM DUAL;
 ID := SEQUENCE_BITACORA.nextval;
IF INSERTING THEN
    log_action := 'Insert';
    ID_MO:=:NEW.PK_CATALOGO_CATEGORIA;
  ELSIF UPDATING THEN
    log_action := 'Update';
    ID_MO:=:OLD.PK_CATALOGO_CATEGORIA;
  ELSIF DELETING THEN
    log_action := 'Delete';
    ID_MO:=:OLD.PK_CATALOGO_CATEGORIA;
  END IF;
 INSERT INTO BITACORA(PK_BITACORA,USUARIO, fecha_modificacion,tabla,OPERACION,valor_anterior,valor_nuevo,pk_alterado) 
 VALUES (ID,V_USER,V_FECHA, 'CATALOGO CATEGORIA', log_action,:OLD.NOMBRE_CATALOGO_CATEGORIA,:NEW.NOMBRE_CATALOGO_CATEGORIA,ID_MO);
 end;

create or replace TRIGGER BITACORA_CATALOGO_ESCRITO
AFTER INSERT OR UPDATE OR DELETE on CATALOGO_ESCRITO
FOR EACH ROW
DECLARE
    log_action  bitacora.operacion%TYPE;
    V_USER VARCHAR2(50);
    V_FECHA DATE;
    ID INTEGER;
    ID_MO INTEGER;
 begin
 SELECT USER INTO V_USER FROM DUAL;
 SELECT SYSDATE INTO V_FECHA FROM DUAL;
 ID := SEQUENCE_BITACORA.nextval;
IF INSERTING THEN
    log_action := 'Insert';
    ID_MO:=:NEW.PK_CATALOGO_ESCRITO;
  ELSIF UPDATING THEN
    log_action := 'Update';
    ID_MO:=:OLD.PK_CATALOGO_ESCRITO;
  ELSIF DELETING THEN
    log_action := 'Delete';
    ID_MO:=:OLD.PK_CATALOGO_ESCRITO;
  END IF;
 INSERT INTO BITACORA(PK_BITACORA,USUARIO, fecha_modificacion,tabla,OPERACION,valor_anterior,valor_nuevo,pk_alterado) 
 VALUES (ID,V_USER,V_FECHA, 'CATALOGO ESCRITO', log_action,:OLD.NOMBRE_TIPO_ESCRITO,:NEW.NOMBRE_TIPO_ESCRITO,ID_MO);
 end;

create or replace TRIGGER BIT_CATALOGO_CAT_HABILIDAD
AFTER INSERT OR UPDATE OR DELETE on CATALOGO_CATEGORIA_HABILIDAD
FOR EACH ROW
DECLARE
    log_action  bitacora.operacion%TYPE;
    V_USER VARCHAR2(50);
    V_FECHA DATE;
    ID INTEGER;
    ID_MO INTEGER;
 begin
 SELECT USER INTO V_USER FROM DUAL;
 SELECT SYSDATE INTO V_FECHA FROM DUAL;
 ID := SEQUENCE_BITACORA.nextval;
IF INSERTING THEN
    log_action := 'Insert';
    ID_MO:=:NEW.PK_CATEGORIA_HABILIDAD;
  ELSIF UPDATING THEN
    log_action := 'Update';
    ID_MO:=:OLD.PK_CATEGORIA_HABILIDAD;
  ELSIF DELETING THEN
    log_action := 'Delete';
    ID_MO:=:OLD.PK_CATEGORIA_HABILIDAD;
  END IF;
 INSERT INTO BITACORA(PK_BITACORA,USUARIO, fecha_modificacion,tabla,OPERACION,valor_anterior,valor_nuevo,pk_alterado) 
 VALUES (ID,V_USER,V_FECHA, 'CATALOGO CATEGORIA_HABILIDAD', log_action,:OLD.NOMBRE_CATEGORIA_HABILIDAD,:NEW.NOMBRE_CATEGORIA_HABILIDAD,ID_MO);
 end;

create or replace TRIGGER BITACORA_GENERO
AFTER INSERT OR UPDATE OR DELETE on CATALOGO_GENERO
FOR EACH ROW
DECLARE
    log_action  bitacora.operacion%TYPE;
    V_USER VARCHAR2(50);
    V_FECHA DATE;
    ID INTEGER;
    ID_MO INTEGER;
 begin
 SELECT USER INTO V_USER FROM DUAL;
 SELECT SYSDATE INTO V_FECHA FROM DUAL;
 ID := SEQUENCE_BITACORA.nextval;
IF INSERTING THEN
    log_action := 'Insert';
    ID_MO:=:NEW.PK_GENERO;
  ELSIF UPDATING THEN
    log_action := 'Update';
    ID_MO:=:OLD.PK_GENERO;
  ELSIF DELETING THEN
    log_action := 'Delete';
    ID_MO:=:OLD.PK_GENERO;
  END IF;
 INSERT INTO BITACORA(PK_BITACORA,USUARIO, fecha_modificacion,tabla,OPERACION,valor_anterior,valor_nuevo,pk_alterado) 
 VALUES (ID,V_USER,V_FECHA, 'CATALOGO GENERO', log_action,:OLD.NOMBRE_GENERO,:NEW.NOMBRE_GENERO,ID_MO);
 end;

create or replace TRIGGER BITACORA_GRA_ACA
AFTER INSERT OR UPDATE OR DELETE on CATALOGO_GRADO_ACADEMICO
FOR EACH ROW
DECLARE
    log_action  bitacora.operacion%TYPE;
    V_USER VARCHAR2(50);
    V_FECHA DATE;
    ID INTEGER;
    ID_MO INTEGER;
 begin
 SELECT USER INTO V_USER FROM DUAL;
 SELECT SYSDATE INTO V_FECHA FROM DUAL;
 ID := SEQUENCE_BITACORA.nextval;
IF INSERTING THEN
    log_action := 'Insert';
    ID_MO:=:NEW.PK_GRADO_ACADEMICO;
  ELSIF UPDATING THEN
    log_action := 'Update';
    ID_MO:=:OLD.PK_GRADO_ACADEMICO;
  ELSIF DELETING THEN
    log_action := 'Delete';
    ID_MO:=:OLD.PK_GRADO_ACADEMICO;
  END IF;
 INSERT INTO BITACORA(PK_BITACORA,USUARIO, fecha_modificacion,tabla,OPERACION,valor_anterior,valor_nuevo,pk_alterado) 
 VALUES (ID,V_USER,V_FECHA, 'CATALOGO GRADO ACADEMICO', log_action,:OLD.NOMBRE_GRADO_ACADEMICO,:NEW.NOMBRE_GRADO_ACADEMICO,ID_MO);
 end;

create or replace TRIGGER BITACORA_CATALOGO_HAB
AFTER INSERT OR UPDATE OR DELETE on CATALOGO_HABILIDAD
FOR EACH ROW
DECLARE
    log_action  bitacora.operacion%TYPE;
    V_USER VARCHAR2(50);
    V_FECHA DATE;
    ID INTEGER;
    ID_MO INTEGER;
 begin
 SELECT USER INTO V_USER FROM DUAL;
 SELECT SYSDATE INTO V_FECHA FROM DUAL;
 ID := SEQUENCE_BITACORA.nextval;
IF INSERTING THEN
    log_action := 'Insert';
    ID_MO:=:NEW.PK_HABILIDAD;
  ELSIF UPDATING THEN
    log_action := 'Update';
    ID_MO:=:OLD.PK_HABILIDAD;
  ELSIF DELETING THEN
    log_action := 'Delete';
    ID_MO:=:OLD.PK_HABILIDAD;
  END IF;
 INSERT INTO BITACORA(PK_BITACORA,USUARIO, fecha_modificacion,tabla,OPERACION,valor_anterior,valor_nuevo,pk_alterado) 
 VALUES (ID,V_USER,V_FECHA, 'CATALOGO HABILIDAD', log_action,:OLD.NOMBRE_HABILIDAD,:NEW.NOMBRE_HABILIDAD,ID_MO);
 end;

create or replace TRIGGER BITACORA_CATALOGO_IDIOMA
AFTER INSERT OR UPDATE OR DELETE on CATALOGO_IDIOMA
FOR EACH ROW
DECLARE
    log_action  bitacora.operacion%TYPE;
    V_USER VARCHAR2(50);
    V_FECHA DATE;
    ID INTEGER;
    ID_MO INTEGER;
 begin
 SELECT USER INTO V_USER FROM DUAL;
 SELECT SYSDATE INTO V_FECHA FROM DUAL;
 ID := SEQUENCE_BITACORA.nextval;
IF INSERTING THEN
    log_action := 'Insert';
    ID_MO:=:NEW.PK_IDIOMA;
  ELSIF UPDATING THEN
    log_action := 'Update';
    ID_MO:=:OLD.PK_IDIOMA;
  ELSIF DELETING THEN
    log_action := 'Delete';
    ID_MO:=:OLD.PK_IDIOMA;
  END IF;
 INSERT INTO BITACORA(PK_BITACORA,USUARIO, fecha_modificacion,tabla,OPERACION,valor_anterior,valor_nuevo,pk_alterado) 
 VALUES (ID,V_USER,V_FECHA, 'CATALOGO IDIOMA', log_action,:OLD.NOMBRE_IDIOMA,:NEW.NOMBRE_IDIOMA,ID_MO);
 end;

create or replace TRIGGER BITACORA_CATALOGO_LICENCIA
AFTER INSERT OR UPDATE OR DELETE on CATALOGO_LICENCIA
FOR EACH ROW
DECLARE
    log_action  bitacora.operacion%TYPE;
    V_USER VARCHAR2(50);
    V_FECHA DATE;
    ID INTEGER;
    ID_MO INTEGER;
 begin
 SELECT USER INTO V_USER FROM DUAL;
 SELECT SYSDATE INTO V_FECHA FROM DUAL;
 ID := SEQUENCE_BITACORA.nextval;
IF INSERTING THEN
    log_action := 'Insert';
    ID_MO:=:NEW.PK_CATALOGO_LICENCIA;
  ELSIF UPDATING THEN
    log_action := 'Update';
    ID_MO:=:OLD.PK_CATALOGO_LICENCIA;
  ELSIF DELETING THEN
    log_action := 'Delete';
    ID_MO:=:OLD.PK_CATALOGO_LICENCIA;
  END IF;
 INSERT INTO BITACORA(PK_BITACORA,USUARIO, fecha_modificacion,tabla,OPERACION,valor_anterior,valor_nuevo,pk_alterado) 
 VALUES (ID,V_USER,V_FECHA, 'CATALOGO LICENCIA', log_action,:OLD.NOMBRE_TIPO_LICENCIA,:NEW.NOMBRE_TIPO_LICENCIA,ID_MO);
 end;

create or replace TRIGGER BITACORA_CATALOGO_PONDERACION
AFTER INSERT OR UPDATE OR DELETE on CATALOGO_PONDERACION
FOR EACH ROW
DECLARE
    log_action  bitacora.operacion%TYPE;
    V_USER VARCHAR2(50);
    V_FECHA DATE;
    ID INTEGER;
    ID_MO INTEGER;
 begin
 SELECT USER INTO V_USER FROM DUAL;
 SELECT SYSDATE INTO V_FECHA FROM DUAL;
 ID := SEQUENCE_BITACORA.nextval;
IF INSERTING THEN
    log_action := 'Insert';
    ID_MO:=:NEW.PK_CATALOGO_PONDERACION;
  ELSIF UPDATING THEN
    log_action := 'Update';
    ID_MO:=:OLD.PK_CATALOGO_PONDERACION;
  ELSIF DELETING THEN
    log_action := 'Delete';
    ID_MO:=:OLD.PK_CATALOGO_PONDERACION;
  END IF;
 INSERT INTO BITACORA(PK_BITACORA,USUARIO, fecha_modificacion,tabla,OPERACION,valor_anterior,valor_nuevo,pk_alterado) 
 VALUES (ID,V_USER,V_FECHA, 'CATALOGO PONDERACION', log_action,:OLD.ETIQUETA_PONDERACION,:NEW.ETIQUETA_PONDERACION,ID_MO);
 end;

create or replace TRIGGER BITACORA_CATALOGO_PUESTO
AFTER INSERT OR UPDATE OR DELETE on CATALOGO_PUESTO
FOR EACH ROW
DECLARE
    log_action  bitacora.operacion%TYPE;
    V_USER VARCHAR2(50);
    V_FECHA DATE;
    ID INTEGER;
    ID_MO INTEGER;
 begin
 SELECT USER INTO V_USER FROM DUAL;
 SELECT SYSDATE INTO V_FECHA FROM DUAL;
 ID := SEQUENCE_BITACORA.nextval;
IF INSERTING THEN
    log_action := 'Insert';
    ID_MO:=:NEW.PK_CATALOGO_PUESTO;
  ELSIF UPDATING THEN
    log_action := 'Update';
    ID_MO:=:OLD.PK_CATALOGO_PUESTO;
  ELSIF DELETING THEN
    log_action := 'Delete';
    ID_MO:=:OLD.PK_CATALOGO_PUESTO;
  END IF;
 INSERT INTO BITACORA(PK_BITACORA,USUARIO, fecha_modificacion,tabla,OPERACION,valor_anterior,valor_nuevo,pk_alterado) 
 VALUES (ID,V_USER,V_FECHA, 'CATALOGO PUESTO', log_action,:OLD.NOMBRE_CATALOGO_PUESTO,:NEW.NOMBRE_CATALOGO_PUESTO,ID_MO);
 end;

create or replace TRIGGER BITACORA_CATALOGO_SEC_EMP
AFTER INSERT OR UPDATE OR DELETE on CATALOGO_SECTOR_EMPRESA
FOR EACH ROW
DECLARE
    log_action  bitacora.operacion%TYPE;
    V_USER VARCHAR2(50);
    V_FECHA DATE;
    ID INTEGER;
    ID_MO INTEGER;
 begin
 SELECT USER INTO V_USER FROM DUAL;
 SELECT SYSDATE INTO V_FECHA FROM DUAL;
 ID := SEQUENCE_BITACORA.nextval;
IF INSERTING THEN
    log_action := 'Insert';
    ID_MO:=:NEW.PK_SECTOR;
  ELSIF UPDATING THEN
    log_action := 'Update';
    ID_MO:=:OLD.PK_SECTOR;
  ELSIF DELETING THEN
    log_action := 'Delete';
    ID_MO:=:OLD.PK_SECTOR;
  END IF;
 INSERT INTO BITACORA(PK_BITACORA,USUARIO, fecha_modificacion,tabla,OPERACION,valor_anterior,valor_nuevo,pk_alterado) 
 VALUES (ID,V_USER,V_FECHA, 'CATALOGO SECTOR EMPRESA', log_action,:OLD.NOMBRE_SECTOR,:NEW.NOMBRE_SECTOR,ID_MO);
 end;
 
create or replace TRIGGER BITACORA_CATALOGO_TIP_EMP
AFTER INSERT OR UPDATE OR DELETE on CATALOGO_TIPO_EMPRESA
FOR EACH ROW
DECLARE
    log_action  bitacora.operacion%TYPE;
    V_USER VARCHAR2(50);
    V_FECHA DATE;
    ID INTEGER;
    ID_MO INTEGER;
 begin
 SELECT USER INTO V_USER FROM DUAL;
 SELECT SYSDATE INTO V_FECHA FROM DUAL;
 ID := SEQUENCE_BITACORA.nextval;
IF INSERTING THEN
    log_action := 'Insert';
    ID_MO:=:NEW.PK_TIPO_EMPRESA;
  ELSIF UPDATING THEN
    log_action := 'Update';
    ID_MO:=:OLD.PK_TIPO_EMPRESA;
  ELSIF DELETING THEN
    log_action := 'Delete';
    ID_MO:=:OLD.PK_TIPO_EMPRESA;
  END IF;
 INSERT INTO BITACORA(PK_BITACORA,USUARIO, fecha_modificacion,tabla,OPERACION,valor_anterior,valor_nuevo,pk_alterado) 
 VALUES (ID,V_USER,V_FECHA, 'CATALOGO TIPO EMPRESA', log_action,:OLD.NOMBRE_TIPO_EMPRESA,:NEW.NOMBRE_TIPO_EMPRESA,ID_MO);
 end;
 
create or replace TRIGGER BITACORA_CATALOGO_TIP_PRUEB
AFTER INSERT OR UPDATE OR DELETE on CATALOGO_TIPO_PRUEBA
FOR EACH ROW
DECLARE
    log_action  bitacora.operacion%TYPE;
    V_USER VARCHAR2(50);
    V_FECHA DATE;
    ID INTEGER;
    ID_MO INTEGER;
 begin
 SELECT USER INTO V_USER FROM DUAL;
 SELECT SYSDATE INTO V_FECHA FROM DUAL;
 ID := SEQUENCE_BITACORA.nextval;
IF INSERTING THEN
    log_action := 'Insert';
    ID_MO:=:NEW.PK_CAT_TIPO_PRUEBA;
  ELSIF UPDATING THEN
    log_action := 'Update';
    ID_MO:=:OLD.PK_CAT_TIPO_PRUEBA;
  ELSIF DELETING THEN
    log_action := 'Delete';
    ID_MO:=:OLD.PK_CAT_TIPO_PRUEBA;
  END IF;
 INSERT INTO BITACORA(PK_BITACORA,USUARIO, fecha_modificacion,tabla,OPERACION,valor_anterior,valor_nuevo,pk_alterado) 
 VALUES (ID,V_USER,V_FECHA, 'CATALOGO TIPO PRUEBA', log_action,:OLD.NOMBRE_TIPO_PRUEBA,:NEW.NOMBRE_TIPO_PRUEBA,ID_MO);
 end;

create or replace TRIGGER BITACORA_CATALOGO_TIP_REF
AFTER INSERT OR UPDATE OR DELETE on CATALOGO_TIPO_REFERENCIA
FOR EACH ROW
DECLARE
    log_action  bitacora.operacion%TYPE;
    V_USER VARCHAR2(50);
    V_FECHA DATE;
    ID INTEGER;
    ID_MO INTEGER;
 begin
 SELECT USER INTO V_USER FROM DUAL;
 SELECT SYSDATE INTO V_FECHA FROM DUAL;
 ID := SEQUENCE_BITACORA.nextval;
IF INSERTING THEN
    log_action := 'Insert';
    ID_MO:=:NEW.PK_TIPO_REFERENCIA;
  ELSIF UPDATING THEN
    log_action := 'Update';
    ID_MO:=:OLD.PK_TIPO_REFERENCIA;
  ELSIF DELETING THEN
    log_action := 'Delete';
    ID_MO:=:OLD.PK_TIPO_REFERENCIA;
  END IF;
 INSERT INTO BITACORA(PK_BITACORA,USUARIO, fecha_modificacion,tabla,OPERACION,valor_anterior,valor_nuevo,pk_alterado) 
 VALUES (ID,V_USER,V_FECHA, 'CATALOGO TIPO REFERENCIA', log_action,:OLD.TIPO_REFERENCIA,:NEW.TIPO_REFERENCIA,ID_MO);
 end;

create or replace TRIGGER BITACORA_CATALOGO_PAIS
AFTER INSERT OR UPDATE OR DELETE on PAIS
FOR EACH ROW
DECLARE
    log_action  bitacora.operacion%TYPE;
    V_USER VARCHAR2(50);
    V_FECHA DATE;
    ID INTEGER;
    ID_MO INTEGER;
 begin
 SELECT USER INTO V_USER FROM DUAL;
 SELECT SYSDATE INTO V_FECHA FROM DUAL;
 ID := SEQUENCE_BITACORA.nextval;
IF INSERTING THEN
    log_action := 'Insert';
    ID_MO:=:NEW.PK_PAIS;
  ELSIF UPDATING THEN
    log_action := 'Update';
    ID_MO:=:OLD.PK_PAIS;
  ELSIF DELETING THEN
    log_action := 'Delete';
    ID_MO:=:OLD.PK_PAIS;
  END IF;
 INSERT INTO BITACORA(PK_BITACORA,USUARIO, fecha_modificacion,tabla,OPERACION,valor_anterior,valor_nuevo,pk_alterado) 
 VALUES (ID,V_USER,V_FECHA, 'CATALOGO PAIS', log_action,:OLD.NOMBRE_PAIS,:NEW.NOMBRE_PAIS,ID_MO);
 end;

create or replace TRIGGER BITACORA_CATALOGO_MUNICIPIO
AFTER INSERT OR UPDATE OR DELETE on MUNICIPIO
FOR EACH ROW
DECLARE
    log_action  bitacora.operacion%TYPE;
    V_USER VARCHAR2(50);
    V_FECHA DATE;
    ID INTEGER;
    ID_MO INTEGER;
 begin
 SELECT USER INTO V_USER FROM DUAL;
 SELECT SYSDATE INTO V_FECHA FROM DUAL;
 ID := SEQUENCE_BITACORA.nextval;
IF INSERTING THEN
    log_action := 'Insert';
    ID_MO:=:NEW.PK_MUNICIPIO;
  ELSIF UPDATING THEN
    log_action := 'Update';
    ID_MO:=:OLD.PK_MUNICIPIO;
  ELSIF DELETING THEN
    log_action := 'Delete';
    ID_MO:=:OLD.PK_MUNICIPIO;
  END IF;
 INSERT INTO BITACORA(PK_BITACORA,USUARIO, fecha_modificacion,tabla,OPERACION,valor_anterior,valor_nuevo,pk_alterado) 
 VALUES (ID,V_USER,V_FECHA, 'CATALOGO MUNICIPIO', log_action,:OLD.NOMBRE_MUNICIPIO,:NEW.NOMBRE_MUNICIPIO,ID_MO);
 end;

create or replace TRIGGER BITACORA_CATALOGO_DEPARTAMENTO
AFTER INSERT OR UPDATE OR DELETE on DEPARTAMENTO
FOR EACH ROW
DECLARE
    log_action  bitacora.operacion%TYPE;
    V_USER VARCHAR2(50);
    V_FECHA DATE;
    ID INTEGER;
    ID_MO INTEGER;
 begin
 SELECT USER INTO V_USER FROM DUAL;
 SELECT SYSDATE INTO V_FECHA FROM DUAL;
 ID := SEQUENCE_BITACORA.nextval;
IF INSERTING THEN
    log_action := 'Insert';
    ID_MO:=:NEW.PK_DEPARTAMENTO;
  ELSIF UPDATING THEN
    log_action := 'Update';
    ID_MO:=:OLD.PK_DEPARTAMENTO;
  ELSIF DELETING THEN
    log_action := 'Delete';
    ID_MO:=:OLD.PK_DEPARTAMENTO;
  END IF;
 INSERT INTO BITACORA(PK_BITACORA,USUARIO, fecha_modificacion,tabla,OPERACION,valor_anterior,valor_nuevo,pk_alterado) 
 VALUES (ID,V_USER,V_FECHA, 'CATALOGO DEPARTAMENTO', log_action,:OLD.NOMBRE_DEPARTAMENTO,:NEW.NOMBRE_DEPARTAMENTO,ID_MO);
 end;
 